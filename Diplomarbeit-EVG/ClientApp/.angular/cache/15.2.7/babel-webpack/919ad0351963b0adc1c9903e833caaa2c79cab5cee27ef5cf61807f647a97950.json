{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { C40Encoder } from './C40Encoder';\nimport { TEXT_ENCODATION } from './constants';\nvar TextEncoder = /** @class */function (_super) {\n  __extends(TextEncoder, _super);\n  function TextEncoder() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  TextEncoder.prototype.getEncodingMode = function () {\n    return TEXT_ENCODATION;\n  };\n  TextEncoder.prototype.encodeChar = function (c, sb) {\n    if (c === ' '.charCodeAt(0)) {\n      sb.append(3);\n      return 1;\n    }\n    if (c >= '0'.charCodeAt(0) && c <= '9'.charCodeAt(0)) {\n      sb.append(c - 48 + 4);\n      return 1;\n    }\n    if (c >= 'a'.charCodeAt(0) && c <= 'z'.charCodeAt(0)) {\n      sb.append(c - 97 + 14);\n      return 1;\n    }\n    if (c < ' '.charCodeAt(0)) {\n      sb.append(0); // Shift 1 Set\n      sb.append(c);\n      return 2;\n    }\n    if (c <= '/'.charCodeAt(0)) {\n      sb.append(1); // Shift 2 Set\n      sb.append(c - 33);\n      return 2;\n    }\n    if (c <= '@'.charCodeAt(0)) {\n      sb.append(1); // Shift 2 Set\n      sb.append(c - 58 + 15);\n      return 2;\n    }\n    if (c >= '['.charCodeAt(0) && c <= '_'.charCodeAt(0)) {\n      sb.append(1); // Shift 2 Set\n      sb.append(c - 91 + 22);\n      return 2;\n    }\n    if (c === '`'.charCodeAt(0)) {\n      sb.append(2); // Shift 3 Set\n      sb.append(0); // '`' - 96 == 0\n      return 2;\n    }\n    if (c <= 'Z'.charCodeAt(0)) {\n      sb.append(2); // Shift 3 Set\n      sb.append(c - 65 + 1);\n      return 2;\n    }\n    if (c <= 127) {\n      sb.append(2); // Shift 3 Set\n      sb.append(c - 123 + 27);\n      return 2;\n    }\n    sb.append(1 + \"\\u001E\"); // Shift 2, Upper Shift\n    var len = 2;\n    len += this.encodeChar(c - 128, sb);\n    return len;\n  };\n  return TextEncoder;\n}(C40Encoder);\nexport { TextEncoder };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}