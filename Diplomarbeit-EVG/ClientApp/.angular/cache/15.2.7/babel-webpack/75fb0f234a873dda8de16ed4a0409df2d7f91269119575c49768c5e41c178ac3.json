{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Kevin/source/repos/Diplomarbeit-EVG/Diplomarbeit-EVG/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../data.service\";\nimport * as i4 from \"../nav-menu/nav-menu.component\";\nexport class HomeComponent {\n  constructor(router, http, dataService) {\n    this.router = router;\n    this.http = http;\n    this.dataService = dataService;\n  }\n  redirectToAdminWindow() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      var {\n        value: password\n      } = yield Swal.fire({\n        title: \"Enter your password\",\n        input: \"password\",\n        inputLabel: \"Password\",\n        inputPlaceholder: \"Enter your password\",\n        inputAttributes: {\n          maxlength: \"10\",\n          autocapitalize: \"off\",\n          autocorrect: \"off\"\n        }\n      });\n      if (password == \"EVG1\") {\n        Swal.fire(`Entered password: ${password}`);\n        _this.router.navigate([\"adminwindow\"]);\n      }\n    })();\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.DataService));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 72,\n  vars: 0,\n  consts: [[\"href\", \"https://get.asp.net/\"], [\"href\", \"https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx\"], [\"href\", \"https://angular.io/\"], [\"href\", \"http://www.typescriptlang.org/\"], [\"href\", \"http://getbootstrap.com/\"], [\"id\", \"paragraph-user\"], [\"id\", \"btn_adminwindow\", 3, \"click\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-nav-menu\");\n      i0.ɵɵelementStart(1, \"h1\");\n      i0.ɵɵtext(2, \"Hello, world!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"p\");\n      i0.ɵɵtext(4, \"Welcome to your new single-page application, built with:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ul\")(6, \"li\")(7, \"a\", 0);\n      i0.ɵɵtext(8, \"ASP.NET Core\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(9, \" and \");\n      i0.ɵɵelementStart(10, \"a\", 1);\n      i0.ɵɵtext(11, \"C#\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(12, \" for cross-platform server-side code\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"li\")(14, \"a\", 2);\n      i0.ɵɵtext(15, \"Angular\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(16, \" and \");\n      i0.ɵɵelementStart(17, \"a\", 3);\n      i0.ɵɵtext(18, \"TypeScript\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(19, \" for client-side code\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"li\")(21, \"a\", 4);\n      i0.ɵɵtext(22, \"Bootstrap\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(23, \" for layout and styling\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"p\");\n      i0.ɵɵtext(25, \"To help you get started, we've also set up:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"ul\")(27, \"li\")(28, \"strong\");\n      i0.ɵɵtext(29, \"Client-side navigation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(30, \". For example, click \");\n      i0.ɵɵelementStart(31, \"em\");\n      i0.ɵɵtext(32, \"Counter\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(33, \" then \");\n      i0.ɵɵelementStart(34, \"em\");\n      i0.ɵɵtext(35, \"Back\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(36, \" to return here.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"li\")(38, \"strong\");\n      i0.ɵɵtext(39, \"Angular CLI integration\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(40, \". In development mode, there's no need to run \");\n      i0.ɵɵelementStart(41, \"code\");\n      i0.ɵɵtext(42, \"ng serve\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(43, \". It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"li\")(45, \"strong\");\n      i0.ɵɵtext(46, \"Efficient production builds\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(47, \". In production mode, development-time features are disabled, and your \");\n      i0.ɵɵelementStart(48, \"code\");\n      i0.ɵɵtext(49, \"dotnet publish\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(50, \" configuration automatically invokes \");\n      i0.ɵɵelementStart(51, \"code\");\n      i0.ɵɵtext(52, \"ng build\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(53, \" to produce minified, ahead-of-time compiled JavaScript files.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(54, \"p\");\n      i0.ɵɵtext(55, \"The \");\n      i0.ɵɵelementStart(56, \"code\");\n      i0.ɵɵtext(57, \"ClientApp\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(58, \" subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any \");\n      i0.ɵɵelementStart(59, \"code\");\n      i0.ɵɵtext(60, \"ng\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(61, \" command (e.g., \");\n      i0.ɵɵelementStart(62, \"code\");\n      i0.ɵɵtext(63, \"ng test\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(64, \"), or use \");\n      i0.ɵɵelementStart(65, \"code\");\n      i0.ɵɵtext(66, \"npm\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(67, \" to install extra packages into it.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(68, \"p\", 5);\n      i0.ɵɵtext(69, \" made by Kevin Eppensteiner\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(70, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_70_listener() {\n        return ctx.redirectToAdminWindow();\n      });\n      i0.ɵɵtext(71, \"Admin-login\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  dependencies: [i4.NavMenuComponent],\n  styles: [\"#paragraph-user[_ngcontent-%COMP%]\\n {\\n\\n   align-content:center;\\n   align-items:center;\\n     \\n\\n }\"]\n});","map":{"version":3,"mappings":";AAIA,OAAOA,IAAI,MAAM,aAAa;;;;;;AAM9B,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,MAAc,EAAUC,IAAgB,EAAUC,WAAwB;IAA1E,WAAM,GAANF,MAAM;IAAkB,SAAI,GAAJC,IAAI;IAAsB,gBAAW,GAAXC,WAAW;EAAiB;EAI5FC,qBAAqB;IAAA;IAAA;MAEzB,IAAI;QAAEC,KAAK,EAAEC;MAAQ,CAAE,SAASR,IAAI,CAACS,IAAI,CAAC;QACxCC,KAAK,EAAE,qBAAqB;QAC5BC,KAAK,EAAE,UAAU;QACjBC,UAAU,EAAE,UAAU;QACtBC,gBAAgB,EAAE,qBAAqB;QACvCC,eAAe,EAAE;UACfC,SAAS,EAAE,IAAI;UACfC,cAAc,EAAE,KAAK;UACrBC,WAAW,EAAE;;OAEhB,CAAC;MACF,IAAIT,QAAQ,IAAI,MAAM,EAAC;QACrBR,IAAI,CAACS,IAAI,CAAC,qBAAqBD,QAAQ,EAAE,CAAC;QAC1C,KAAI,CAACL,MAAM,CAACe,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;;IACtC;EAEH;;AAzBWjB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV1BC,+BAA6B;MAC7BA,0BAAI;MAAAA,6BAAa;MAAAA,iBAAK;MACtBA,yBAAG;MAAAA,wEAAwD;MAAAA,iBAAI;MAC/DA,0BAAI;MACiCA,4BAAY;MAAAA,iBAAI;MAACA,qBAAI;MAAAA,6BAAiE;MAAAA,mBAAE;MAAAA,iBAAI;MAACA,qDAAmC;MAAAA,iBAAK;MACxKA,2BAAI;MAA8BA,wBAAO;MAAAA,iBAAI;MAACA,sBAAI;MAAAA,6BAAyC;MAAAA,2BAAU;MAAAA,iBAAI;MAACA,sCAAoB;MAAAA,iBAAK;MACnIA,2BAAI;MAAmCA,0BAAS;MAAAA,iBAAI;MAACA,wCAAsB;MAAAA,iBAAK;MAElFA,0BAAG;MAAAA,4DAA2C;MAAAA,iBAAI;MAClDA,2BAAI;MACUA,uCAAsB;MAAAA,iBAAS;MAAAA,sCAAqB;MAAAA,2BAAI;MAAAA,wBAAO;MAAAA,iBAAK;MAACA,uBAAK;MAAAA,2BAAI;MAAAA,qBAAI;MAAAA,iBAAK;MAACA,iCAAe;MAAAA,iBAAK;MACxHA,2BAAI;MAAQA,wCAAuB;MAAAA,iBAAS;MAAAA,+DAA8C;MAAAA,6BAAM;MAAAA,yBAAQ;MAAAA,iBAAO;MAAAA,0KAAyJ;MAAAA,iBAAK;MAC7QA,2BAAI;MAAQA,4CAA2B;MAAAA,iBAAS;MAAAA,wFAAuE;MAAAA,6BAAM;MAAAA,+BAAc;MAAAA,iBAAO;MAACA,sDAAoC;MAAAA,6BAAM;MAAAA,yBAAQ;MAAAA,iBAAO;MAACA,+EAA6D;MAAAA,iBAAK;MAEjRA,0BAAG;MAAAA,qBAAI;MAAAA,6BAAM;MAAAA,0BAAS;MAAAA,iBAAO;MAACA,sIAAoH;MAAAA,6BAAM;MAAAA,mBAAE;MAAAA,iBAAO;MAACA,iCAAe;MAAAA,6BAAM;MAAAA,wBAAO;MAAAA,iBAAO;MAAAA,2BAAU;MAAAA,6BAAM;MAAAA,oBAAG;MAAAA,iBAAO;MAACA,oDAAkC;MAAAA,iBAAI;MAEtQA,6BAAuB;MAACA,4CAA0B;MAAAA,iBAAI;MACtDA,kCAA+D;MAAlCA;QAAA,OAASC,2BAAuB;MAAA,EAAC;MAACD,4BAAW;MAAAA,iBAAS","names":["Swal","HomeComponent","constructor","router","http","dataService","redirectToAdminWindow","value","password","fire","title","input","inputLabel","inputPlaceholder","inputAttributes","maxlength","autocapitalize","autocorrect","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Kevin\\source\\repos\\Diplomarbeit-EVG\\Diplomarbeit-EVG\\ClientApp\\src\\app\\home\\home.component.ts","C:\\Users\\Kevin\\source\\repos\\Diplomarbeit-EVG\\Diplomarbeit-EVG\\ClientApp\\src\\app\\home\\home.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { DataService } from '../data.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent\r\n{\r\n\r\n  constructor(private router: Router, private http: HttpClient, private dataService: DataService) { }\r\n\r\n\r\n\r\n  async redirectToAdminWindow()\r\n  {\r\n    var { value: password } = await Swal.fire({\r\n      title: \"Enter your password\",\r\n      input: \"password\",\r\n      inputLabel: \"Password\",\r\n      inputPlaceholder: \"Enter your password\",\r\n      inputAttributes: {\r\n        maxlength: \"10\",\r\n        autocapitalize: \"off\",\r\n        autocorrect: \"off\"\r\n      }\r\n    });\r\n    if (password == \"EVG1\"){\r\n      Swal.fire(`Entered password: ${password}`);\r\n      this.router.navigate([\"adminwindow\"]);\r\n    }\r\n    \r\n  }\r\n\r\n}\r\n","<app-nav-menu></app-nav-menu>\r\n<h1>Hello, world!</h1>\r\n<p>Welcome to your new single-page application, built with:</p>\r\n<ul>\r\n  <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\r\n  <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\r\n  <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\r\n</ul>\r\n<p>To help you get started, we've also set up:</p>\r\n<ul>\r\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\r\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\r\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\r\n</ul>\r\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>\r\n\r\n<p id=\"paragraph-user\"> made by Kevin Eppensteiner</p>\r\n<button id=\"btn_adminwindow\" (click)=\"redirectToAdminWindow()\">Admin-login</button>\r\n\r\n<style>\r\n\r\n #paragraph-user\r\n {\r\n\r\n   align-content:center;\r\n   align-items:center;\r\n     \r\n\r\n }\r\n\r\n</style>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}