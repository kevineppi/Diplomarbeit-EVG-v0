{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../nav-menu/nav-menu.component\";\nexport class RoomIdManualComponent {\n  constructor(router) {\n    this.router = router;\n  }\n  handleFormSubmit() {\n    const numberToSend = 42;\n    this.sendNumberToBackend(numberToSend);\n    this.router.navigate([\"navigation\"]);\n  }\n  // Definiere eine Funktion, um die Anfrage zu senden\n  sendNumberToBackend(numberToSend) {\n    const xhr = new XMLHttpRequest();\n    const method = \"POST\";\n    xhr.open(method, 'StartPointController/EmpfangeZahl', true);\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    // Definiere eine Funktion, die aufgerufen wird, wenn die Anfrage erfolgreich ist\n    xhr.onload = function () {\n      if (xhr.status >= 200 && xhr.status < 300) {\n        // Erfolgreiche Anfrage\n        console.log(\"Erfolgreich gesendet!\");\n      } else {\n        // Fehlerhafte Anfrage\n        console.error(\"Fehler bei der Anfrage. Statuscode:\", xhr.status);\n      }\n    };\n    // Definiere eine Funktion, die aufgerufen wird, wenn ein Fehler auftritt\n    xhr.onerror = function () {\n      console.error(\"Netzwerkfehler bei der Anfrage.\");\n    };\n    const data = JSON.stringify({\n      number: numberToSend\n    });\n    xhr.send(data);\n  }\n}\nRoomIdManualComponent.ɵfac = function RoomIdManualComponent_Factory(t) {\n  return new (t || RoomIdManualComponent)(i0.ɵɵdirectiveInject(i1.Router));\n};\nRoomIdManualComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RoomIdManualComponent,\n  selectors: [[\"app-roomidmanual\"]],\n  decls: 9,\n  vars: 0,\n  consts: [[3, \"submit\"], [\"type\", \"text\"], [\"type\", \"submit\"]],\n  template: function RoomIdManualComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-nav-menu\");\n      i0.ɵɵelementStart(1, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function RoomIdManualComponent_Template_form_submit_1_listener() {\n        return ctx.handleFormSubmit();\n      });\n      i0.ɵɵelementStart(2, \"label\");\n      i0.ɵɵtext(3, \" Bitte den gew\\u00FCnschten Zielraum eingeben!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"br\")(5, \"input\", 1)(6, \"br\");\n      i0.ɵɵelementStart(7, \"button\", 2);\n      i0.ɵɵtext(8, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.NgForm, i3.NavMenuComponent],\n  styles: [\"form[_ngcontent-%COMP%]{\\n    align-content:center;\\n    align-items:center;\\n  }\"]\n});","map":{"version":3,"mappings":";;;;AASA,OAAM,MAAOA,qBAAqB;EAChCC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;EAAY;EAEtCC,gBAAgB;IAEd,MAAMC,YAAY,GAAG,EAAE;IACvB,IAAI,CAACC,mBAAmB,CAACD,YAAY,CAAC;IACtC,IAAI,CAACF,MAAM,CAACI,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;EACtC;EAEA;EACAD,mBAAmB,CAACD,YAAoB;IACxC,MAAMG,GAAG,GAAG,IAAIC,cAAc,EAAE;IAE9B,MAAMC,MAAM,GAAG,MAAM;IAEvBF,GAAG,CAACG,IAAI,CAACD,MAAM,EAAE,mCAAmC,EAAE,IAAI,CAAC;IAC3DF,GAAG,CAACI,gBAAgB,CAAC,cAAc,EAAE,kBAAkB,CAAC;IAExD;IACAJ,GAAG,CAACK,MAAM,GAAG;MACX,IAAIL,GAAG,CAACM,MAAM,IAAI,GAAG,IAAIN,GAAG,CAACM,MAAM,GAAG,GAAG,EAAE;QACzC;QACAC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;OACrC,MAAM;QACL;QACAD,OAAO,CAACE,KAAK,CAAC,qCAAqC,EAAET,GAAG,CAACM,MAAM,CAAC;;IAEpE,CAAC;IAED;IACAN,GAAG,CAACU,OAAO,GAAG;MACZH,OAAO,CAACE,KAAK,CAAC,iCAAiC,CAAC;IAClD,CAAC;IACD,MAAME,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;MAAEC,MAAM,EAAEjB;IAAY,CAAE,CAAC;IAErDG,GAAG,CAACe,IAAI,CAACJ,IAAI,CAAC;EAChB;;AArCalB,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTlCC,+BAA6B;MAE7BA,+BAAoC;MAA9BA;QAAA,OAAUC,sBAAkB;MAAA,EAAC;MACjCD,6BAAO;MAACA,8DAAwC;MAAAA,iBAAQ;MACxDA,qBAAM;MAGNA,iCAAsB;MAAAA,sBAAM;MAAAA,iBAAS","names":["RoomIdManualComponent","constructor","router","handleFormSubmit","numberToSend","sendNumberToBackend","navigate","xhr","XMLHttpRequest","method","open","setRequestHeader","onload","status","console","log","error","onerror","data","JSON","stringify","number","send","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Kevin\\source\\repos\\Diplomarbeit-EVG\\Diplomarbeit-EVG\\ClientApp\\src\\app\\roomidmanual\\roomidmanual.component.ts","C:\\Users\\Kevin\\source\\repos\\Diplomarbeit-EVG\\Diplomarbeit-EVG\\ClientApp\\src\\app\\roomidmanual\\roomidmanual.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router, RouterModule } from '@angular/router';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-roomidmanual',\r\n  templateUrl: './roomidmanual.component.html'\r\n})\r\nexport class RoomIdManualComponent {\r\n  constructor(private router: Router) { }\r\n\r\n  handleFormSubmit(): void\r\n  {\r\n    const numberToSend = 42;\r\n    this.sendNumberToBackend(numberToSend);\r\n    this.router.navigate([\"navigation\"]);\r\n  }\r\n\r\n  // Definiere eine Funktion, um die Anfrage zu senden\r\n  sendNumberToBackend(numberToSend: number) {\r\n  const xhr = new XMLHttpRequest();\r\n\r\n    const method = \"POST\";\r\n\r\n  xhr.open(method, 'StartPointController/EmpfangeZahl', true);\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n\r\n  // Definiere eine Funktion, die aufgerufen wird, wenn die Anfrage erfolgreich ist\r\n  xhr.onload = function () {\r\n    if (xhr.status >= 200 && xhr.status < 300) {\r\n      // Erfolgreiche Anfrage\r\n      console.log(\"Erfolgreich gesendet!\");\r\n    } else {\r\n      // Fehlerhafte Anfrage\r\n      console.error(\"Fehler bei der Anfrage. Statuscode:\", xhr.status);\r\n    }\r\n  };\r\n\r\n  // Definiere eine Funktion, die aufgerufen wird, wenn ein Fehler auftritt\r\n  xhr.onerror = function () {\r\n    console.error(\"Netzwerkfehler bei der Anfrage.\");\r\n  };\r\n  const data = JSON.stringify({ number: numberToSend });\r\n\r\n  xhr.send(data);\r\n}\r\n\r\n// Beispielaufruf der Funktion mit einer Zahl\r\n\r\n\r\n}\r\n","<app-nav-menu></app-nav-menu>\r\n\r\n<form (submit)=\"handleFormSubmit()\">\r\n  <label> Bitte den gewünschten Zielraum eingeben!</label>\r\n  <br />\r\n  <input type=\"text\" />\r\n  <br />\r\n  <button type=\"submit\">Submit</button>\r\n\r\n</form>\r\n<style>\r\n  form{\r\n    align-content:center;\r\n    align-items:center;\r\n  }\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}