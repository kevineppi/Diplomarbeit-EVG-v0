{"ast":null,"code":"/*\n * Copyright 2013 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// package com.google.zxing.pdf417;\n/**\n * @author Guenther Grau\n */\nvar PDF417ResultMetadata = /** @class */function () {\n  function PDF417ResultMetadata() {\n    this.segmentCount = -1;\n    this.fileSize = -1;\n    this.timestamp = -1;\n    this.checksum = -1;\n  }\n  /**\n   * The Segment ID represents the segment of the whole file distributed over different symbols.\n   *\n   * @return File segment index\n   */\n  PDF417ResultMetadata.prototype.getSegmentIndex = function () {\n    return this.segmentIndex;\n  };\n  PDF417ResultMetadata.prototype.setSegmentIndex = function (segmentIndex) {\n    this.segmentIndex = segmentIndex;\n  };\n  /**\n   * Is the same for each related PDF417 symbol\n   *\n   * @return File ID\n   */\n  PDF417ResultMetadata.prototype.getFileId = function () {\n    return this.fileId;\n  };\n  PDF417ResultMetadata.prototype.setFileId = function (fileId) {\n    this.fileId = fileId;\n  };\n  /**\n   * @return always null\n   * @deprecated use dedicated already parsed fields\n   */\n  //   @Deprecated\n  PDF417ResultMetadata.prototype.getOptionalData = function () {\n    return this.optionalData;\n  };\n  /**\n   * @param optionalData old optional data format as int array\n   * @deprecated parse and use new fields\n   */\n  //   @Deprecated\n  PDF417ResultMetadata.prototype.setOptionalData = function (optionalData) {\n    this.optionalData = optionalData;\n  };\n  /**\n   * @return true if it is the last segment\n   */\n  PDF417ResultMetadata.prototype.isLastSegment = function () {\n    return this.lastSegment;\n  };\n  PDF417ResultMetadata.prototype.setLastSegment = function (lastSegment) {\n    this.lastSegment = lastSegment;\n  };\n  /**\n   * @return count of segments, -1 if not set\n   */\n  PDF417ResultMetadata.prototype.getSegmentCount = function () {\n    return this.segmentCount;\n  };\n  PDF417ResultMetadata.prototype.setSegmentCount = function (segmentCount /*int*/) {\n    this.segmentCount = segmentCount;\n  };\n  PDF417ResultMetadata.prototype.getSender = function () {\n    return this.sender || null;\n  };\n  PDF417ResultMetadata.prototype.setSender = function (sender) {\n    this.sender = sender;\n  };\n  PDF417ResultMetadata.prototype.getAddressee = function () {\n    return this.addressee || null;\n  };\n  PDF417ResultMetadata.prototype.setAddressee = function (addressee) {\n    this.addressee = addressee;\n  };\n  /**\n   * Filename of the encoded file\n   *\n   * @return filename\n   */\n  PDF417ResultMetadata.prototype.getFileName = function () {\n    return this.fileName;\n  };\n  PDF417ResultMetadata.prototype.setFileName = function (fileName) {\n    this.fileName = fileName;\n  };\n  /**\n   * filesize in bytes of the encoded file\n   *\n   * @return filesize in bytes, -1 if not set\n   */\n  PDF417ResultMetadata.prototype.getFileSize = function () {\n    return this.fileSize;\n  };\n  PDF417ResultMetadata.prototype.setFileSize = function (fileSize /*long*/) {\n    this.fileSize = fileSize;\n  };\n  /**\n   * 16-bit CRC checksum using CCITT-16\n   *\n   * @return crc checksum, -1 if not set\n   */\n  PDF417ResultMetadata.prototype.getChecksum = function () {\n    return this.checksum;\n  };\n  PDF417ResultMetadata.prototype.setChecksum = function (checksum /*int*/) {\n    this.checksum = checksum;\n  };\n  /**\n   * unix epock timestamp, elapsed seconds since 1970-01-01\n   *\n   * @return elapsed seconds, -1 if not set\n   */\n  PDF417ResultMetadata.prototype.getTimestamp = function () {\n    return this.timestamp;\n  };\n  PDF417ResultMetadata.prototype.setTimestamp = function (timestamp /*long*/) {\n    this.timestamp = timestamp;\n  };\n  return PDF417ResultMetadata;\n}();\nexport default PDF417ResultMetadata;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}