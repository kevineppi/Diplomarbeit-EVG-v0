{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Kevin/source/repos/Diplomarbeit-EVG/Diplomarbeit-EVG/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../nav-menu/nav-menu.component\";\nexport class AdmincomponentComponent {\n  //TS Code zum Senden des Files (der Karten)\n  //Methode zum errechnen eines Bytewertes aus einem Foto\n  getByteValueFromImage(imageFile) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = event => {\n        if (event.target && event.target.result) {\n          const image = new Image();\n          image.onload = () => {\n            const canvas = document.createElement('canvas');\n            const context = canvas.getContext('2d');\n            if (!context) {\n              reject(new Error('Canvas 2D context not supported'));\n              return;\n            }\n            canvas.width = image.width;\n            canvas.height = image.height;\n            context.drawImage(image, 0, 0);\n            const imageData = context.getImageData(0, 0, image.width, image.height);\n            const byteData = new Uint8Array(imageData.data.buffer);\n            resolve(byteData);\n          };\n          image.src = event.target.result.toString();\n        } else {\n          reject(new Error('Failed to read image file'));\n        }\n      };\n      reader.readAsDataURL(imageFile);\n    });\n  }\n  sendFileToBackend() {\n    var _this = this;\n    //Foto holen und den Bytewert aus diesem Foto errechnen, zum weiterleiten\n    const inputElement = document.getElementById('fileInput');\n    var byte;\n    if (inputElement) {\n      inputElement.addEventListener('change', /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (event) {\n          const files = event.target.files;\n          if (files && files.length > 0) {\n            const imageFile = files[0];\n            try {\n              const byteValue = yield _this.getByteValueFromImage(imageFile);\n              console.log(byteValue);\n            } catch (error) {\n              console.error('Error:', error);\n            }\n          }\n        });\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }\n}\nAdmincomponentComponent.ɵfac = function AdmincomponentComponent_Factory(t) {\n  return new (t || AdmincomponentComponent)();\n};\nAdmincomponentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdmincomponentComponent,\n  selectors: [[\"app-admincomponent\"]],\n  decls: 18,\n  vars: 0,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1, shrink-to-fit=no\"], [\"rel\", \"stylesheet\", \"href\", \"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\"], [1, \"container\", \"mt-5\"], [\"action\", \"sendFileToBackend()\"], [1, \"form-group\"], [\"for\", \"fileInput\"], [\"type\", \"file\", \"id\", \"fileInput\", 1, \"form-control-file\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function AdmincomponentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2)(4, \"link\", 3);\n      i0.ɵɵelementStart(5, \"title\");\n      i0.ɵɵtext(6, \"File Upload Form\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"body\");\n      i0.ɵɵelement(8, \"app-nav-menu\");\n      i0.ɵɵelementStart(9, \"div\", 4)(10, \"form\", 5)(11, \"div\", 6)(12, \"label\", 7);\n      i0.ɵɵtext(13, \"Choose File:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"div\", 6);\n      i0.ɵɵelementStart(16, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function AdmincomponentComponent_Template_button_click_16_listener() {\n        return ctx.sendFileToBackend();\n      });\n      i0.ɵɵtext(17, \"Upload File\");\n      i0.ɵɵelementEnd()()()()();\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.NgForm, i2.NavMenuComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAOA,OAAM,MAAOA,uBAAuB;EAElC;EAKA;EACAC,qBAAqB,CAACC,SAAe;IACrC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACrC,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;MAE/BD,MAAM,CAACE,MAAM,GAAIC,KAAK,IAAI;QACxB,IAAIA,KAAK,CAACC,MAAM,IAAID,KAAK,CAACC,MAAM,CAACC,MAAM,EAAE;UACvC,MAAMC,KAAK,GAAG,IAAIC,KAAK,EAAE;UACzBD,KAAK,CAACJ,MAAM,GAAG,MAAK;YAClB,MAAMM,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;YAC/C,MAAMC,OAAO,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;YAEvC,IAAI,CAACD,OAAO,EAAE;cACZZ,MAAM,CAAC,IAAIc,KAAK,CAAC,iCAAiC,CAAC,CAAC;cACpD;;YAGFL,MAAM,CAACM,KAAK,GAAGR,KAAK,CAACQ,KAAK;YAC1BN,MAAM,CAACO,MAAM,GAAGT,KAAK,CAACS,MAAM;YAC5BJ,OAAO,CAACK,SAAS,CAACV,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;YAE9B,MAAMW,SAAS,GAAGN,OAAO,CAACO,YAAY,CAAC,CAAC,EAAE,CAAC,EAAEZ,KAAK,CAACQ,KAAK,EAAER,KAAK,CAACS,MAAM,CAAC;YACvE,MAAMI,QAAQ,GAAG,IAAIC,UAAU,CAACH,SAAS,CAACI,IAAI,CAACC,MAAM,CAAC;YACtDxB,OAAO,CAACqB,QAAQ,CAAC;UACnB,CAAC;UAEDb,KAAK,CAACiB,GAAG,GAAGpB,KAAK,CAACC,MAAM,CAACC,MAAM,CAACmB,QAAQ,EAAE;SAC3C,MAAM;UACLzB,MAAM,CAAC,IAAIc,KAAK,CAAC,2BAA2B,CAAC,CAAC;;MAElD,CAAC;MAEDb,MAAM,CAACyB,aAAa,CAAC7B,SAAS,CAAC;IACjC,CAAC,CAAC;EACJ;EAGE8B,iBAAiB;IAAA;IACf;IACA,MAAMC,YAAY,GAAGlB,QAAQ,CAACmB,cAAc,CAAC,WAAW,CAAqB;IAE7E,IAAIC,IAAI;IAER,IAAIF,YAAY,EAAE;MAChBA,YAAY,CAACG,gBAAgB,CAAC,QAAQ;QAAA,6BAAE,WAAO3B,KAAK,EAAI;UACtD,MAAM4B,KAAK,GAAI5B,KAAK,CAACC,MAA2B,CAAC2B,KAAK;UAEtD,IAAIA,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;YAC7B,MAAMpC,SAAS,GAAGmC,KAAK,CAAC,CAAC,CAAC;YAC1B,IAAI;cACF,MAAME,SAAS,SAAS,KAAI,CAACtC,qBAAqB,CAACC,SAAS,CAAC;cAC7DsC,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;aACvB,CAAC,OAAOG,KAAK,EAAE;cACdF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;;;QAGpC,CAAC;QAAA;UAAA;QAAA;MAAA,IAAC;;EAGN;;AAlEW1C,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAA2C;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCLpCC,+BAAgB;MAEdA,0BAAsB;MAGtBA,6BAAO;MAAAA,gCAAgB;MAAAA,iBAAQ;MAEjCA,4BAAM;MACJA,+BAA6B;MAC7BA,8BAA4B;MAGCA,6BAAY;MAAAA,iBAAQ;MAC3CA,4BAA4D;MAC9DA,iBAAM;MAENA,0BAEM;MAENA,kCAA4E;MAA9BA;QAAA,OAASC,uBAAmB;MAAA,EAAC;MAACD,4BAAW;MAAAA,iBAAS","names":["AdmincomponentComponent","getByteValueFromImage","imageFile","Promise","resolve","reject","reader","FileReader","onload","event","target","result","image","Image","canvas","document","createElement","context","getContext","Error","width","height","drawImage","imageData","getImageData","byteData","Uint8Array","data","buffer","src","toString","readAsDataURL","sendFileToBackend","inputElement","getElementById","byte","addEventListener","files","length","byteValue","console","log","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Kevin\\source\\repos\\Diplomarbeit-EVG\\Diplomarbeit-EVG\\ClientApp\\src\\app\\admincomponent\\admincomponent.component.ts","C:\\Users\\Kevin\\source\\repos\\Diplomarbeit-EVG\\Diplomarbeit-EVG\\ClientApp\\src\\app\\admincomponent\\admincomponent.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admincomponent',\r\n  templateUrl: './admincomponent.component.html',\r\n  styleUrls: ['./admincomponent.component.css']\r\n})\r\nexport class AdmincomponentComponent\r\n{\r\n  //TS Code zum Senden des Files (der Karten)\r\n\r\n  \r\n\r\n\r\n  //Methode zum errechnen eines Bytewertes aus einem Foto\r\n  getByteValueFromImage(imageFile: File): Promise<Uint8Array> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (event) => {\r\n      if (event.target && event.target.result) {\r\n        const image = new Image();\r\n        image.onload = () => {\r\n          const canvas = document.createElement('canvas');\r\n          const context = canvas.getContext('2d');\r\n\r\n          if (!context) {\r\n            reject(new Error('Canvas 2D context not supported'));\r\n            return;\r\n          }\r\n\r\n          canvas.width = image.width;\r\n          canvas.height = image.height;\r\n          context.drawImage(image, 0, 0);\r\n\r\n          const imageData = context.getImageData(0, 0, image.width, image.height);\r\n          const byteData = new Uint8Array(imageData.data.buffer);\r\n          resolve(byteData);\r\n        };\r\n\r\n        image.src = event.target.result.toString();\r\n      } else {\r\n        reject(new Error('Failed to read image file'));\r\n      }\r\n    };\r\n\r\n    reader.readAsDataURL(imageFile);\r\n  });\r\n}\r\n\r\n\r\n  sendFileToBackend() {\r\n    //Foto holen und den Bytewert aus diesem Foto errechnen, zum weiterleiten\r\n    const inputElement = document.getElementById('fileInput') as HTMLInputElement;\r\n\r\n    var byte;\r\n\r\n    if (inputElement) {\r\n      inputElement.addEventListener('change', async (event) => {\r\n        const files = (event.target as HTMLInputElement).files;\r\n\r\n        if (files && files.length > 0) {\r\n          const imageFile = files[0];\r\n          try {\r\n            const byteValue = await this.getByteValueFromImage(imageFile);\r\n            console.log(byteValue);\r\n          } catch (error) {\r\n            console.error('Error:', error);\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\r\n  <title>File Upload Form</title>\r\n</head>\r\n<body>\r\n  <app-nav-menu></app-nav-menu>\r\n  <div class=\"container mt-5\">\r\n    <form action=\"sendFileToBackend()\">\r\n      <div class=\"form-group\">\r\n        <label for=\"fileInput\">Choose File:</label>\r\n        <input type=\"file\" class=\"form-control-file\" id=\"fileInput\">\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n\r\n      </div>\r\n\r\n      <button type=\"submit\" class=\"btn btn-primary\" (click)=\"sendFileToBackend()\">Upload File</button>\r\n    </form>\r\n  </div>\r\n\r\n</body>\r\n</html>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}